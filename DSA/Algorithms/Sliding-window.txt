Example 1) : 

You are given an integer array nums consisting of n elements, and an integer k.

Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.

Example 1:

Input: nums = [1,12,-5,-6,50,3], k = 4
Output: 12.75000
Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75

Solution : 

1) Find the sum of first k elements using for loop.
2) Assume the found sum as maximum
3) Go with another loop from kth pointer
4) In an existing sum, add next element and remove (i-k) element - sliding window.
5) Chose from earlier sum and just found sum using Math.max function
6) Find the max average using max sum

public double findMaxAverage(int[] nums, int k) {
  	int sum = 0;
        int max = 0;
        for(int i=0; i<k; i++){
            sum= sum + nums[i];
        }
        max = sum;

        for(int i=k ;i<nums.length; i++){

            sum = sum + nums[i] - nums[i-k];
            max= Math.max(sum, max);
        }

        return max/ 1.0/ k;

    }

============================================================================================================================================================

Example 2: 

