Self join : 

Employees who are also managers : 

CREATE TABLE employees(
    EMPLOYEE_ID int,
    NAME Varchar(20),
    PHONE_NUMBER int,
    HIRE_DATE date,
    MANAGER_ID int);

INSERT INTO EMPLOYEES VALUES (100, "ANURAG", 9889269997, "1987-06-17", 100);
INSERT INTO EMPLOYEES VALUES (101, "harsh", 8789269986, "1987-06-20", 100);
INSERT INTO EMPLOYEES VALUES (102, "SUMIT", 7689269975, "1987-07-07", 103);
INSERT INTO EMPLOYEES VALUES (103, "RUHI", 9589269964, "1987-07-12", 102);
INSERT INTO EMPLOYEES VALUES (104, "KAE", 8489269953, "1987-07-23", 103);

select distinct(NAME) from employees where EMPLOYEE_ID in (select MANAGER_ID from employees);
select distinct(e1.NAME) from employees e1 inner join employees e2 on e1.EMPLOYEE_ID=e2.MANAGER_ID;

=======================================================================================================================

{
   "firstName" : "Atul",
   "middleName" : "Madhukarrao",
   "lastName" : "Tekade",
   "gender" : "Male",
   "dateOfBirth" : "2012-04-23T18:25:43.511Z",
   "mobileNumber" : "7384745317",
   "addrLine1" : "chbz",
   "addrLine2" : "amt",
   "emailId" : "pv@gmail.com",
   "subjectId" : 1
}

=======================================================================================================================

ACID Properties : 

In order to maintain consistancy in a database, before and after a transaction certain properties are followed.
These properties are ACID Properties. 

1) Atomicity : Entire transaction happens at once or doesn't happen at all.

Ex : Debit from A's account and credit in B's account. Either both the transaction will happen or no transaction.

2) Consistancy : Database must be consistance before and after transaction.

Ex : Total amount before and after transaction must be same.
A : 500 - 200 = 300
B : 600 + 200 = 800 

Before : 500 + 600 = 1100
After : 800 + 300 = 1100

3) Isolation : This property ensures that multiple transactions can occur concurrently with leading to database inconsistancy.
Changes occuring to one transaction will not be visible to another transaction unless changes are committed to the memory.

4) Durability : 

This property ensures that, once the transaction is completed and updates to the database are stored and written to the disk, they 
persist even if the system failure occurs.

=======================================================================================================================

Indexing : 

Indexing improves the database performance by reducing number of visits to disk system required to fulfil the sql query.

Advantages : 
1) Improves performace of search query.

Disadvantages : 
1) Takes memory.
2) Takes time to create the index.
3) Slow down the insert query as it would take extra time to update the indexes.

Types of indexes : 

1) Clustered Index : 

Clustered index can only be created on primary key.
Only one clustered index can be created.
If we want to create another clustered index, we need to drop the primary key coloumn and create another key as a primary key and build new
clustered index on that column. 

2) Non-Clustered Index : 

Non-clustered index are index on another columns other than primary key which columns are frequently used in search query.
Any number of indexes can be created based on different parameters.

=======================================================================================================================

Normalization : 

Is the process of minimizing redundancy from database. Normal forms are used to reduce this redundancy from 
database tables.

=======================================================================================================================\

Select statement : 

Important, when you want to bring another column which is derived from existing column use
"case statements" and put conditions and finally [as "column_name" ] from employee.

% is used for wildcards [select * from employees where name like "a%r%"
_ means single any character
[ab] means any among a and b.

ILIKE - LIKE with case insensitive

Print departments that are located in region ‘Americas’. List:
- Department name
- City, where the department is located
 
How to join 4 tables : 
select * from table1 inner join table2 on table1.col1 = table2.col3 inner join table3 on table2.col3 = table3.col4 inner join table4 on table3.col3 = table4
.col6 where table1.col3 = 'Something';